class Solution:
    def computeArea(self, A: int, B: int, C: int, D: int, E: int, F: int, G: int, H: int) -> int:
        a1 = (C-A)*(D-B)
        a2 =(G-E)*(H-F)
        
        xlow = max(A, E)
        xhigh =min(C,G)
        
        ylow = max(B,F)
        yhigh = min(D,H)
        
        if xhigh - xlow > 0 and yhigh - ylow > 0:
            over = (xhigh - xlow)*(yhigh - ylow)
        else:
            over = 0
            
        return a1+a2-over



class Solution:
    def isRectangleOverlap(self, rec1: List[int], rec2: List[int]) -> bool:
        xlow = max(rec1[0], rec2[0])
        xhigh = min(rec1[2], rec2[2])
        ylow = max(rec1[1], rec2[1])
        yhigh = min(rec1[3], rec2[3])
        
        if xhigh - xlow >0 and yhigh - ylow >0:
            return True
        else:
            return False
